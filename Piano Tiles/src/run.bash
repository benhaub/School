#! /bin/bash

###############################################################################
# Authour   : Ben Haubrich                                                    #
# File      : run.bash                                                        #
# Synopsis  : Runs the elf executable on the DE2-115. Finds the cable to use  #
#             first, then resets the board, runs make, and downloads the      #
#             executable to the board. If the download is unsuccessful, it    #
#             attempts to re-program the sof                                	#
###############################################################################

#give the script the .elf file that was generated by make
if [ "$1" = "" ]; then
  echo "Please supply an elf file to run."
  exit 1;
fi

#Variables for find the blaster USB
BLASTER_NUM=
BUS=
DEVICE=
# Absolute path to .sof
SOF=/home/bjh885/engr-ece/DE2-115/DE2-115_Computer/verilog/DE2_115_Computer.sof

#Check for the Altera Blaster and get location
lsusb | egrep "Altera Blaster"
if [ $? -eq 1 ]; then
  echo "DE2 is not connected"
  exit 1
else
  BUS=$(lsusb | egrep "Altera Blaster" | cut -d" " -f2 | tr -d ":")
  DEVICE=$(lsusb | egrep "Altera Blaster" | cut -d" " -f4 | tr -d ":")
  BLASTER_NUM=$(udevadm info -a -n /dev/bus/usb/${BUS}/${DEVICE} | egrep -w KERNEL | cut -d"=" -f3 | tr -d "\"")
  echo "Connecting to USB-Blaster[${BLASTER_NUM}]"
fi

make all
nios2-download --instance 0 --device 1 -g -r $1

#If the download was unsuccessful, try re-programming the sof.
if [ $? -ne 0 ]; then
  nios2-configure-sof --device 1 --cable "USB-Blaster [${BLASTER_NUM}]" ${SOF}
  #Download and reset the board
  nios2-download --instance 0 --device 1 -g -r $1
  #Open a terminal to view stdout
  nios2-terminal -d 1 -i 0
  exit 1
fi
if [ $? -ne 0 ]; then
  #If you get invalid cable errors, try opening up quartus and checking the
  #cable name through there.
  exit 0
else
  nios2-terminal -d 1 -i 0
  exit 1;
fi
exit 0;
